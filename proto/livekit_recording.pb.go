// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.6
// source: livekit_recording.proto

package livekit

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StartRecordingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Input:
	//	*StartRecordingRequest_Url
	//	*StartRecordingRequest_Template
	Input isStartRecordingRequest_Input `protobuf_oneof:"input"`
	// Types that are assignable to Output:
	//	*StartRecordingRequest_File
	//	*StartRecordingRequest_S3
	//	*StartRecordingRequest_Rtmp
	Output  isStartRecordingRequest_Output `protobuf_oneof:"output"`
	Options *RecordingOptions              `protobuf:"bytes,6,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *StartRecordingRequest) Reset() {
	*x = StartRecordingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_recording_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRecordingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRecordingRequest) ProtoMessage() {}

func (x *StartRecordingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_recording_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRecordingRequest.ProtoReflect.Descriptor instead.
func (*StartRecordingRequest) Descriptor() ([]byte, []int) {
	return file_livekit_recording_proto_rawDescGZIP(), []int{0}
}

func (m *StartRecordingRequest) GetInput() isStartRecordingRequest_Input {
	if m != nil {
		return m.Input
	}
	return nil
}

func (x *StartRecordingRequest) GetUrl() string {
	if x, ok := x.GetInput().(*StartRecordingRequest_Url); ok {
		return x.Url
	}
	return ""
}

func (x *StartRecordingRequest) GetTemplate() *RecordingTemplate {
	if x, ok := x.GetInput().(*StartRecordingRequest_Template); ok {
		return x.Template
	}
	return nil
}

func (m *StartRecordingRequest) GetOutput() isStartRecordingRequest_Output {
	if m != nil {
		return m.Output
	}
	return nil
}

func (x *StartRecordingRequest) GetFile() string {
	if x, ok := x.GetOutput().(*StartRecordingRequest_File); ok {
		return x.File
	}
	return ""
}

func (x *StartRecordingRequest) GetS3() *RecordingS3Output {
	if x, ok := x.GetOutput().(*StartRecordingRequest_S3); ok {
		return x.S3
	}
	return nil
}

func (x *StartRecordingRequest) GetRtmp() string {
	if x, ok := x.GetOutput().(*StartRecordingRequest_Rtmp); ok {
		return x.Rtmp
	}
	return ""
}

func (x *StartRecordingRequest) GetOptions() *RecordingOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type isStartRecordingRequest_Input interface {
	isStartRecordingRequest_Input()
}

type StartRecordingRequest_Url struct {
	Url string `protobuf:"bytes,1,opt,name=url,proto3,oneof"`
}

type StartRecordingRequest_Template struct {
	Template *RecordingTemplate `protobuf:"bytes,2,opt,name=template,proto3,oneof"`
}

func (*StartRecordingRequest_Url) isStartRecordingRequest_Input() {}

func (*StartRecordingRequest_Template) isStartRecordingRequest_Input() {}

type isStartRecordingRequest_Output interface {
	isStartRecordingRequest_Output()
}

type StartRecordingRequest_File struct {
	File string `protobuf:"bytes,3,opt,name=file,proto3,oneof"`
}

type StartRecordingRequest_S3 struct {
	S3 *RecordingS3Output `protobuf:"bytes,4,opt,name=s3,proto3,oneof"`
}

type StartRecordingRequest_Rtmp struct {
	Rtmp string `protobuf:"bytes,5,opt,name=rtmp,proto3,oneof"`
}

func (*StartRecordingRequest_File) isStartRecordingRequest_Output() {}

func (*StartRecordingRequest_S3) isStartRecordingRequest_Output() {}

func (*StartRecordingRequest_Rtmp) isStartRecordingRequest_Output() {}

type EndRecordingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordingId string `protobuf:"bytes,1,opt,name=recording_id,json=recordingId,proto3" json:"recording_id,omitempty"`
}

func (x *EndRecordingRequest) Reset() {
	*x = EndRecordingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_recording_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndRecordingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndRecordingRequest) ProtoMessage() {}

func (x *EndRecordingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_recording_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndRecordingRequest.ProtoReflect.Descriptor instead.
func (*EndRecordingRequest) Descriptor() ([]byte, []int) {
	return file_livekit_recording_proto_rawDescGZIP(), []int{1}
}

func (x *EndRecordingRequest) GetRecordingId() string {
	if x != nil {
		return x.RecordingId
	}
	return ""
}

type RecordingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordingId string `protobuf:"bytes,1,opt,name=recording_id,json=recordingId,proto3" json:"recording_id,omitempty"`
}

func (x *RecordingResponse) Reset() {
	*x = RecordingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_livekit_recording_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecordingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordingResponse) ProtoMessage() {}

func (x *RecordingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_livekit_recording_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordingResponse.ProtoReflect.Descriptor instead.
func (*RecordingResponse) Descriptor() ([]byte, []int) {
	return file_livekit_recording_proto_rawDescGZIP(), []int{2}
}

func (x *RecordingResponse) GetRecordingId() string {
	if x != nil {
		return x.RecordingId
	}
	return ""
}

var File_livekit_recording_proto protoreflect.FileDescriptor

var file_livekit_recording_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6c, 0x69, 0x76, 0x65, 0x6b,
	0x69, 0x74, 0x1a, 0x14, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x02, 0x0a, 0x15, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x38, 0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b,
	0x69, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x12, 0x14, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2c, 0x0a, 0x02, 0x73, 0x33, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x53, 0x33, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x48, 0x01,
	0x52, 0x02, 0x73, 0x33, 0x12, 0x14, 0x0a, 0x04, 0x72, 0x74, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x72, 0x74, 0x6d, 0x70, 0x12, 0x33, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x69,
	0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42,
	0x07, 0x0a, 0x05, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x22, 0x38, 0x0a, 0x13, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x11,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x32, 0xaa, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4c, 0x0a, 0x0e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x2e, 0x6c, 0x69,
	0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6c, 0x69,
	0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0c, 0x45, 0x6e, 0x64, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69,
	0x74, 0x2e, 0x45, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2e,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2f, 0x6c, 0x69, 0x76, 0x65, 0x6b, 0x69, 0x74, 0x2d,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x69, 0x76,
	0x65, 0x6b, 0x69, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_livekit_recording_proto_rawDescOnce sync.Once
	file_livekit_recording_proto_rawDescData = file_livekit_recording_proto_rawDesc
)

func file_livekit_recording_proto_rawDescGZIP() []byte {
	file_livekit_recording_proto_rawDescOnce.Do(func() {
		file_livekit_recording_proto_rawDescData = protoimpl.X.CompressGZIP(file_livekit_recording_proto_rawDescData)
	})
	return file_livekit_recording_proto_rawDescData
}

var file_livekit_recording_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_livekit_recording_proto_goTypes = []interface{}{
	(*StartRecordingRequest)(nil), // 0: livekit.StartRecordingRequest
	(*EndRecordingRequest)(nil),   // 1: livekit.EndRecordingRequest
	(*RecordingResponse)(nil),     // 2: livekit.RecordingResponse
	(*RecordingTemplate)(nil),     // 3: livekit.RecordingTemplate
	(*RecordingS3Output)(nil),     // 4: livekit.RecordingS3Output
	(*RecordingOptions)(nil),      // 5: livekit.RecordingOptions
}
var file_livekit_recording_proto_depIdxs = []int32{
	3, // 0: livekit.StartRecordingRequest.template:type_name -> livekit.RecordingTemplate
	4, // 1: livekit.StartRecordingRequest.s3:type_name -> livekit.RecordingS3Output
	5, // 2: livekit.StartRecordingRequest.options:type_name -> livekit.RecordingOptions
	0, // 3: livekit.RecordingService.StartRecording:input_type -> livekit.StartRecordingRequest
	1, // 4: livekit.RecordingService.EndRecording:input_type -> livekit.EndRecordingRequest
	2, // 5: livekit.RecordingService.StartRecording:output_type -> livekit.RecordingResponse
	2, // 6: livekit.RecordingService.EndRecording:output_type -> livekit.RecordingResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_livekit_recording_proto_init() }
func file_livekit_recording_proto_init() {
	if File_livekit_recording_proto != nil {
		return
	}
	file_livekit_models_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_livekit_recording_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRecordingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livekit_recording_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndRecordingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_livekit_recording_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecordingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_livekit_recording_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*StartRecordingRequest_Url)(nil),
		(*StartRecordingRequest_Template)(nil),
		(*StartRecordingRequest_File)(nil),
		(*StartRecordingRequest_S3)(nil),
		(*StartRecordingRequest_Rtmp)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_livekit_recording_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_livekit_recording_proto_goTypes,
		DependencyIndexes: file_livekit_recording_proto_depIdxs,
		MessageInfos:      file_livekit_recording_proto_msgTypes,
	}.Build()
	File_livekit_recording_proto = out.File
	file_livekit_recording_proto_rawDesc = nil
	file_livekit_recording_proto_goTypes = nil
	file_livekit_recording_proto_depIdxs = nil
}
